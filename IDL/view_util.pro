pro	sisen,ix0,iy0	common pdata	t0 = systime(1)	ix=ix0 & iy=iy0 & kmax = imax-ix	print,ix,iy,kmax,format='(3i5)'	kasi1,ix,iy,kmax	dview = rotate(dview,1) 	dem = rotate(dem,1)	ix=jmax-1-iy0 & iy=ix0 & kmax = jmax-ix	print,ix,iy,kmax,format='(3i5)'	kasi1,ix,iy,kmax	dview = rotate(dview,1) 	dem = rotate(dem,1)	ix=imax-1-ix0 & iy=jmax-1-iy0 & kmax = imax-ix	print,ix,iy,kmax,format='(3i5)'	kasi1,ix,iy,kmax	dview = rotate(dview,1) 	dem = rotate(dem,1)	ix=iy0 & iy=jmax-1-ix0 & kmax = jmax-ix	print,ix,iy,kmax,format='(3i5)'	kasi1,ix,iy,kmax	dview=rotate(dview,1)	dem=rotate(dem,1)	t1 = systime(1)	print,t1-t0endpro kasi1,ix,iy,kmax	common pdata	forward_function kasi1x	for k=2,kmax-1 do begin		;print,k		kx = ix + k		ps = 0 > (iy - k)		pe = jmax-1 < (iy + k -1 )		for ky=ps,pe do begin			dview[kx,ky] = kasi1x([ix,iy],[kx,ky])		endfor	endforendfunction kasi1x,point1,point2	common pdata	xs = point1[0] + 1	xe = point2[0] - 1	ys = double(point1[1])	ye = double(point2[1])	zs = dem[point1[0],point1[1]]	ze = dem[point2[0],point2[1]]	for i=xs,xe do begin		xx = double(i)		yy = ys + (ye-ys)*(xx-xs+1)/(xe-xs+2)		y1 = floor(yy)		y2 = y1 + 1		za = zs + (ze-zs)*(xx-xs+1)/(xe-xs+2)		dy = yy - y1		z1 = dem[i,y1]		z2 = dem[i,y2]		zb = z1 + (z2-z1)*dy		if (zb ge za ) then return,0 	endfor	return,1endpro	hifuku,ix0,iy0	common pdata	t0 = systime(1)	ix=ix0 & iy=iy0  & kmax=imax-ix	print,ix,iy,kmax,format='(3i5)'	ykasix,ix,iy,kmax	dview = rotate(dview,1) 	dem = rotate(dem,1)	ix=jmax-1-iy0 & iy=ix0 & kmax=jmax-ix	print,ix,iy,kmax,format='(3i5)'	ykasix,ix,iy,kmax	dview = rotate(dview,1) 	dem = rotate(dem,1)	ix=imax-1-ix0 & iy=jmax-1-iy0 & kmax=imax-ix	print,ix,iy,kmax,format='(3i5)'	ykasix,ix,iy,kmax	dview = rotate(dview,1) 	dem = rotate(dem,1)	ix=iy0 & iy=jmax-1-ix0 & kmax=jmax-ix	print,ix,iy,kmax,format='(3i5)'	ykasix,ix,iy,kmax	dview=rotate(dview,1)	dem=rotate(dem,1)	t1 = systime(1)	print,'time:',t1-t0,' sec',format='(a5,f6.2,a4)'endpro	ykasix,ix,iy,kmax	common pdata	for k=1,kmax-1 do begin		kx = ix + k		ps = 1 > (iy - k)		pe = (jmax-2) < (iy + k - 1)		flag = 0		for ky=ps,pe do begin			if(dview[kx,ky] eq 1) then begin				ykasix2,[kx,ky],[kx,ky+1],[ix,iy]				if(flag) then ykasix2,[kx,ky-1],[kx,ky],[ix,iy]				flag = 0			endif else flag = 1		endfor	endforendpro ykasix2,point1,point2,point0	common pdata	x0=point0[0] & y0=point0[1] & z0=dem[x0,y0] & x0=float(x0) & y0=float(y0)	x1=point1[0] & y1=point1[1] & z1=dem[x1,y1] & x1=float(x1) & y1=float(y1)	x2=point2[0] & y2=point2[1] & z2=dem[x2,y2] & x2=float(x2) & y2=float(y2)	aaa=[[x0,y0,1.0],[x1,y1,1.0],[x2,y2,1.0]]       	bbb=invert(aaa)##[[z0],[z1],[z2]]
	for ix=point1[0]+1,imax-1 do begin		ys=floor(y0+(y1-y0)*(ix-x0)/(x1-x0))-1 > 0 		ye=ceil(y0+(y2-y0)*(ix-x0)/(x2-x0))+1 < jmax-1		flag=1		for iy=ys,ye do begin			za = dem[ix,iy]			zb = bbb[0]*ix + bbb[1]*iy+ bbb[2]			if(za le zb) then begin				if (iy gt ys) and (iy lt ye) then dview[ix,iy]=0
				if (iy eq 0) then dview[ix,iy]=0				if (iy eq jmax-1) then dview[ix,iy]=0				flag = 0			endif		endfor		if(flag) then return	endforendfunction iteration,ix0,iy0,select
	common pdata
	;ix0=435 & iy0=383	dview=bytarr(imax,jmax)+1B	if select eq 1 then hifuku,ix0,iy0 $
        else sisen,ix0,iy0	tvscl,congrid(dview,500,500)
	oplot,[ix0],jmax-[iy0],psym=2,color=255

	B=''
	read,B,Prompt='Continue(yes=1) : '
	return,B
end
